name: Android CI Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Setup Node.js for signing
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        version: 8.1.4

    - name: Check Gradle Wrapper
      run: ./gradlew --version

    - name: Restore Gradle cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches/
          ~/.gradle/wrapper/
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/build.gradle.kts', '**/settings.gradle.kts') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build Debug APK
      run: ./gradlew assembleDebug --stacktrace

    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: app/build/outputs/apk/debug/app-debug.apk

    - name: Build Release APK with Signing
      env:
        STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      run: |
        ./gradlew assembleRelease \
          -Pandroid.injected.signing.store.file=${{ secrets.KEYSTORE_FILE }} \
          -Pandroid.injected.signing.store.password=$STORE_PASSWORD \
          -Pandroid.injected.signing.key.alias=$KEY_ALIAS \
          -Pandroid.injected.signing.key.password=$KEY_PASSWORD

    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: app/build/outputs/apk/release/app-release.apk

    - name: Upload Build Logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: app/build/outputs/logs/
